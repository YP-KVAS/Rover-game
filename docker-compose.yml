version: "3.9"

services:
    nginx:
        image: nginx:latest
        ports:
          - "80:80"
          - "443:443"
        restart: unless-stopped
        volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf
          - /etc/letsencrypt:/etc/letsencrypt
        depends_on:
          server:
            condition: service_healthy

    server:
        container_name: prakticum-server
        image: prackicum-server
        build:
            context: .
            dockerfile: Dockerfile
            args:
              SERVER_PORT: ${SERVER_PORT}
        restart: always
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        env_file:
          - .env
        depends_on:
          postgres:
            condition: service_healthy
        healthcheck:
          test: ["CMD-SHELL", "curl --fail http://localhost:${SERVER_PORT} || exit 1"]
          interval: 10s
          timeout: 5s
          retries: 5
          start_period: 10s

    postgres:
        image: postgres:15.2-alpine
        environment:
          PGDATA: /var/lib/postgresql/data
          POSTGRES_DB: ${POSTGRES_DB}
          POSTGRES_USER: ${POSTGRES_USER}
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        restart: always
        ports:
          - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        volumes:
          - ./db-scripts:/docker-entrypoint-initdb.d
          - ./tmp/pgdata:/var/lib/postgresql/data
        healthcheck:
          test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
          interval: 10s
          timeout: 5s
          retries: 5
          start_period: 30s

    pgadmin:
        image: dpage/pgadmin4:7
        env_file:
          - .pgadmin.env
        environment:
          PGADMIN_LISTEN_PORT: 80
        volumes:
          - ./tmp/pgadmin:/var/lib/pgadmin
        ports:
          - "5050:80"
        restart: unless-stopped

volumes:
  tmp:
    external: true

